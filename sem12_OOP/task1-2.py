# –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-—Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –ø—Ä–∏
# –≤—ã–∑–æ–≤–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# –≠–∫–∑–µ–º–ø–ª—è—Ä –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ k –∑–Ω–∞—á–µ–Ω–∏–π.
# –ü–∞—Ä–∞–º–µ—Ç—Ä k –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–Ω–µ–µ –≤—ã–∑—ã–≤–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏
# –∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–æ–≤.


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á—É 1.
# üìå –°–æ–∑–¥–∞–π—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
# —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ JSON —Ñ–∞–π–ª.
import json


class Factorial:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ñ–æ–∫—Ç–æ—Ä–∏–∞–ª–∞ —á–∏—Å–ª–∞
    """

    def __init__(self, k):
        self._log_value = {}
        self.list_value = []
        self.k = k

    def __call__(self, value):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞, –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–∞–Ω–µ–µ –≤—ã–∑—ã–≤–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª—ã
        :param value: int
        :return: int
        """
        res = 1
        for i in range(1, value + 1):
            res *= i
            self.list_value.append(res)
        self._log_value[value] = res
        self.list_value = self.list_value[-self.k:]
        return self.list_value[-1]

    def view_log(self):
        return self._log_value

    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        with open("task_json.json", "w", encoding="utf-8") as file_json:
            json.dump(self._log_value, file_json)


if __name__ == "__main__":
    f = Factorial(4)
    with f:
        print(f(5))
        print(f(7))
        print(f(10))
        print(f.list_value)
        print(f.view_log())
